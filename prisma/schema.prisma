generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Passing {
  player_name           String   @db.NVarChar(Max)
  team_name             String   @db.NVarChar(Max)
  position              String   @db.NVarChar(50)
  games_played          Int
  completions           Int
  attempts              Int
  yards                 Decimal  @db.Decimal(18, 1)
  completion_percentage Decimal  @db.Decimal(18, 1)
  yards_per_attempt     Decimal  @db.Decimal(18, 1)
  hurries               Int
  sacks                 Int
  sack_yards            Decimal  @db.Decimal(18, 1)
  interceptions         Int
  touchdowns            Int
  tier                  String   @db.NVarChar(Max)
  updated_at            DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Passing_updated_at") @db.DateTime
  season                Int
  player_id             Int
  id                    Int      @id(map: "PK_Passing") @default(autoincrement())
  retired               Boolean  @default(false, map: "DF__Passing__retired__4C364F0E")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Rushing {
  player_name         String   @db.NVarChar(Max)
  team_name           String   @db.NVarChar(Max)
  position            String   @db.NVarChar(50)
  games_played        Int
  rushes              Int
  yards               Decimal  @db.Decimal(18, 1)
  average             Decimal  @db.Decimal(18, 1)
  touchdowns          Int
  broken_tackles      Int
  yards_after_contact Decimal  @db.Decimal(18, 1)
  tackles_for_loss    Int
  fumbles             Int
  fumbles_lost        Int
  tier                String   @db.NVarChar(Max)
  updated_at          DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Rushing_updated_at") @db.DateTime
  season              Int
  player_id           Int
  id                  Int      @id(map: "PK_Rushing") @default(autoincrement())
  retired             Boolean  @default(false, map: "DF__Rushing__retired__4F12BBB9")
}

model Receiving {
  player_name       String   @db.NVarChar(Max)
  team_name         String   @db.NVarChar(Max)
  position          String   @db.NVarChar(50)
  games_played      Int
  targets           Int
  receptions        Int
  yards             Decimal  @db.Decimal(18, 1)
  average           Decimal  @db.Decimal(18, 1)
  yards_after_catch Decimal  @db.Decimal(18, 1)
  touchdowns        Int
  drops             Int
  fumbles           Int
  fumbles_lost      Int
  tier              String   @db.NVarChar(Max)
  updated_at        DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Receiving_updated_at") @db.DateTime
  season            Int
  player_id         Int
  id                Int      @id(map: "PK_Receiving") @default(autoincrement())
  retired           Boolean  @default(false, map: "DF__Receiving__retir__4D2A7347")
}

model Defensive {
  player_name          String   @db.NVarChar(Max)
  team_name            String   @db.NVarChar(Max)
  position             String   @db.NVarChar(50)
  games_played         Int
  tackles              Int
  tackle_assists       Int
  missed_tackles       Int
  sticks               Int
  forced_fumbles       Int
  fumble_recoveries    Int
  tackles_for_loss     Int
  defensive_touchdowns Int
  times_pancaked       Int
  reverse_pancakes     Int
  sacks                Decimal  @db.Decimal(18, 1)
  sack_yards           Decimal  @db.Decimal(18, 1)
  hurries              Int
  targets              Int
  receptions_allowed   Int
  passes_defended      Int
  passes_knocked_loose Int
  interceptions        Int
  interception_yards   Decimal  @db.Decimal(18, 1)
  tier                 String   @db.NVarChar(Max)
  updated_at           DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Defensive_updated_at") @db.DateTime
  season               Int
  player_id            Int
  id                   Int      @id(map: "PK_Defensive") @default(autoincrement())
  retired              Boolean  @default(false, map: "DF__Defensive__retir__4A4E069C")
}

model Blocking {
  player_name      String   @db.NVarChar(Max)
  team_name        String   @db.NVarChar(Max)
  position         String   @db.NVarChar(50)
  games_played     Int
  plays            Int
  pancakes         Int
  reverse_pancaked Int
  hurries_allowed  Int
  sacks_allowed    Int
  tier             String   @db.NVarChar(Max)
  updated_at       DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Blocking_updated_at") @db.DateTime
  season           Int
  player_id        Int
  id               Int      @id(map: "PK_Blocking") @default(autoincrement())
  retired          Boolean  @default(false, map: "DF__Blocking__retire__4959E263")
}

model Kicking {
  player_name                    String   @db.NVarChar(Max)
  team_name                      String   @db.NVarChar(Max)
  position                       String   @db.NVarChar(50)
  games_played                   Int
  fg_made                        Int
  fg_attempts                    Int
  zero_to_nineteen_made          Int
  zero_to_nineteen_attempts      Int
  twenty_to_twenty_nine_made     Int
  twenty_to_twenty_nine_attempts Int
  thirty_to_thirty_nine_made     Int
  thirty_to_thirty_nine_attempts Int
  forty_to_forty_nine_made       Int
  forty_to_forty_nine_attempts   Int
  fifty_plus_made                Int
  fifty_plus_attempts            Int
  xp_made                        Int
  xp_attempts                    Int
  kickoffs                       Int
  touchbacks                     Int
  yards                          Decimal  @db.Decimal(18, 1)
  average                        Decimal  @db.Decimal(18, 1)
  tier                           String   @db.NVarChar(Max)
  updated_at                     DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Kicking_updated_at") @db.DateTime
  season                         Int
  player_id                      Int
  id                             Int      @id(map: "PK_Kicking") @default(autoincrement())
  retired                        Boolean  @default(false, map: "DF__Kicking__retired__4B422AD5")
}

model Ladder {
  team_name               String   @db.NVarChar(Max)
  league                  String   @db.NVarChar(Max)
  owner                   String   @db.NVarChar(Max)
  wins                    Int
  losses                  Int
  ties                    Int
  global_rank             Int
  tier_rank               Int
  offensive_points        Int
  offensive_total_yards   Decimal  @db.Decimal(18, 1)
  offensive_rushing_yards Decimal  @db.Decimal(18, 1)
  offensive_rushes        Int
  offensive_passing_yards Decimal  @db.Decimal(18, 1)
  offensive_completions   Int
  offensive_attempts      Int
  offensive_sacks         Int
  offensive_interceptions Int
  offensive_punts         Int
  offensive_fumbles       Int
  offensive_fumbles_lost  Int
  defensive_points        Int
  defensive_total_yards   Decimal  @db.Decimal(18, 1)
  defensive_rushing_yards Decimal  @db.Decimal(18, 1)
  defensive_rushes        Int
  defensive_passing_yards Decimal  @db.Decimal(18, 1)
  defensive_completions   Int
  defensive_attempts      Int
  defensive_sacks         Int
  defensive_interceptions Int
  defensive_punts         Int
  defensive_fumbles       Int
  defensive_fumbles_lost  Int
  tier                    String   @db.NVarChar(Max)
  updated_at              DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Ladder_updated_at") @db.DateTime
  season                  Int
  team_id                 Int
  id                      Int      @id(map: "PK_Ladder") @default(autoincrement())
}

model Games {
  id                     Int      @id(map: "PK_Games")
  team_one_id            Int
  team_two_id            Int
  game_type              String   @db.NVarChar(Max)
  team_one_points        Int
  team_two_points        Int
  team_one_total_yards   Decimal  @db.Decimal(18, 1)
  team_two_total_yards   Decimal  @db.Decimal(18, 1)
  team_one_rushing_yards Decimal  @db.Decimal(18, 1)
  team_two_rushing_yards Decimal  @db.Decimal(18, 1)
  team_one_rushes        Int
  team_two_rushes        Int
  team_one_passing_yards Decimal  @db.Decimal(18, 1)
  team_two_passing_yards Decimal  @db.Decimal(18, 1)
  team_one_completions   Int
  team_two_completions   Int
  team_one_attempts      Int
  team_two_attempts      Int
  team_one_sacks         Int
  team_two_sacks         Int
  team_one_interceptions Int
  team_two_interceptions Int
  team_one_punts         Int
  team_two_punts         Int
  team_one_fumbles       Int
  team_two_fumbles       Int
  team_one_fumbles_lost  Int
  team_two_fumbles_lost  Int
  updated_at             DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Games_updated_at") @db.DateTime
  season                 Int
}

model Traits {
  id                  Int      @id(map: "PK_Traits") @default(autoincrement())
  trait_key           String   @db.NVarChar(Max)
  trait_name          String   @db.NVarChar(Max)
  conflicts           String?  @db.NVarChar(Max)
  position_exclusions String?  @db.NVarChar(Max)
  salary_modifier     Decimal  @db.Decimal(18, 2)
  updated_at          DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Traits_updated_at") @db.DateTime
}

model Punting {
  player_name   String   @db.NVarChar(Max)
  team_name     String   @db.NVarChar(Max)
  position      String   @db.NVarChar(50)
  games_played  Int
  punts         Int
  yards         Decimal  @db.Decimal(18, 1)
  average       Decimal  @db.Decimal(18, 1)
  touchbacks    Int
  coffins       Int
  hangtime      Decimal  @db.Decimal(18, 1)
  inside_five   Int
  inside_ten    Int
  inside_twenty Int
  tier          String   @db.NVarChar(Max)
  updated_at    DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Punting_updated_at") @db.DateTime
  season        Int
  player_id     Int
  id            Int      @id(map: "PK_Punting") @default(autoincrement())
  retired       Boolean  @default(false, map: "DF__Punting__retired__5006DFF2")
}

model Returning {
  player_name   String   @db.NVarChar(Max)
  team_name     String   @db.NVarChar(Max)
  position      String   @db.NVarChar(50)
  games_played  Int
  krs           Int
  kr_yards      Decimal  @db.Decimal(18, 1)
  kr_average    Decimal  @db.Decimal(18, 1)
  kr_touchdowns Int
  prs           Int
  pr_yards      Decimal  @db.Decimal(18, 1)
  pr_average    Decimal  @db.Decimal(18, 1)
  pr_touchdowns Int
  tier          String   @db.NVarChar(Max)
  updated_at    DateTime @default(dbgenerated("CONVERT([datetime],(sysutcdatetime() AT TIME ZONE 'Central Standard Time'))"), map: "DF_Returning_updated_at") @db.DateTime
  season        Int
  player_id     Int
  id            Int      @id(map: "PK_Returning") @default(autoincrement())
  retired       Boolean  @default(false, map: "DF__Returning__retir__4E1E9780")
}

model TeamBuilderPlayers {
  id               String           @id(map: "PK_TeamBuilderPlayers") @db.UniqueIdentifier
  player_name      String?          @db.NVarChar(Max)
  position         String?          @db.NVarChar(50)
  contract         String?          @db.NVarChar(50)
  trait1           String?          @db.NVarChar(Max)
  trait2           String?          @db.NVarChar(Max)
  trait3           String?          @db.NVarChar(Max)
  salary           Decimal?         @db.Decimal(18, 1)
  is_new           Boolean
  order_index      Int
  team_id          String           @db.UniqueIdentifier
  build_json       String?          @db.NVarChar(Max)
  TeamBuilderTeams TeamBuilderTeams @relation(fields: [team_id], references: [id], onUpdate: NoAction, map: "FK_TeamBuilderPlayers_TeamBuilderTeams")
}

model TeamBuilderTeams {
  id                 String               @id(map: "PK_TeamBuilderTeams") @db.UniqueIdentifier
  user_email         String               @db.NVarChar(Max)
  team_name          String               @db.NVarChar(Max)
  TeamBuilderPlayers TeamBuilderPlayers[]
}
